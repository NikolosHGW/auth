syntax = "proto3";

package user.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/NikolosHGW/auth/pkg/user/v1;v1";

service UserV1 {
    rpc Create(CreateRequest) returns (CreateResponse) {
        option (google.api.http) = {
            post: "/v1/users"
            body: "*"
        };
    }

    rpc Get(GetRequest) returns (GetResponse) {
        option (google.api.http) = {
            get: "/v1/users/{id}"
        };
    }

    rpc Update(UpdateRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            patch: "/v1/users/{id}"
            body: "*"
        };
    }
    
    rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/users/{id}"
        };
    }
}

message CreateRequest {
    string name = 1 [(validate.rules).string = { min_len: 1 }];
    string email = 2 [(validate.rules).string = { email: true, min_len: 1 }];
    string password = 3 [(validate.rules).string = { min_len: 1 }];
    string password_confirm = 4 [(validate.rules).string = { min_len: 1 }];
    Role role = 5 [(validate.rules).enum.defined_only = true];
}

enum Role {
    USER = 0;
    ADMIN = 1;
}

message CreateResponse {
    int64 id = 1;
}

message GetRequest {
    int64 id = 1 [(validate.rules).int64 = { gt: 0 }];
}

message GetResponse {
    int64 id = 1;
    string name = 2;
    string email = 3;
    Role role = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}

message UpdateRequest {
    int64 id = 1 [(validate.rules).int64 = { gt: 0 }];
    google.protobuf.StringValue name = 2;
    google.protobuf.StringValue email = 3;
}

message DeleteRequest {
    int64 id = 1 [(validate.rules).int64 = { gt: 0 }];
}
